Over the last years a number of Crosscutting Frameworks (CFs) have been developed employing white-box strategies. This strategy requires significant technical knowledge to reuse these frameworks, such as, knowledge in specific programming languages, architectural details and also about the framework nomenclature. Besides, the reuse process can only be initiated when the development reaches the implementation phase, avoiding starting the reuse process in early development phases. In this paper we present a model-based technique for reusing CFs that improves the productivity by allowing the application engineer to concentrate on what is really important during the reuse process. We present the foundations of our approach and also the result of two experiments that uses two versions of a Persistence CF; the original and the model-based. The results were promising regarding the effort employed to conduct the reuse process, but almost no difference was noticed concerning the effort in conducting maintenance activities. 